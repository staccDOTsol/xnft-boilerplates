{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import{GestureHandlerRootView}from\"../GestureHandler\";import HeaderContainer from\"../Header/HeaderContainer\";import CardStack from\"./CardStack\";var GestureHandlerWrapper=GestureHandlerRootView!==null&&GestureHandlerRootView!==void 0?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};var StackView=function(_React$Component){_inherits(StackView,_React$Component);var _super=_createSuper(StackView);function StackView(){var _this;_classCallCheck(this,StackView);_this=_super.apply(this,arguments);_defineProperty(_assertThisInitialized(_this),\"state\",{routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}});_defineProperty(_assertThisInitialized(_this),\"getPreviousRoute\",function(_ref){var route=_ref.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];});_defineProperty(_assertThisInitialized(_this),\"renderScene\",function(_ref2){var route=_ref2.route;var descriptor=_this.state.descriptors[route.key]||_this.props.descriptors[route.key];if(!descriptor){return null;}return descriptor.render();});_defineProperty(_assertThisInitialized(_this),\"renderHeader\",function(props){return React.createElement(HeaderContainer,props);});_defineProperty(_assertThisInitialized(_this),\"handleOpenRoute\",function(_ref3){var route=_ref3.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.navigate(route);}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}});_defineProperty(_assertThisInitialized(_this),\"handleCloseRoute\",function(_ref4){var route=_ref4.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}});_defineProperty(_assertThisInitialized(_this),\"handleTransitionStart\",function(_ref5,closing){var route=_ref5.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleTransitionEnd\",function(_ref6,closing){var route=_ref6.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureStart\",function(_ref7){var route=_ref7.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureEnd\",function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});});_defineProperty(_assertThisInitialized(_this),\"handleGestureCancel\",function(_ref9){var route=_ref9.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});});return _this;}_createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;return React.createElement(GestureHandlerWrapper,{style:styles.container},React.createElement(SafeAreaProviderCompat,null,React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){return React.createElement(ModalPresentationContext.Consumer,null,function(isParentModal){return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){return React.createElement(CardStack,_extends({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,renderScene:_this2.renderScene,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel},rest));});});})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys,previousRoutes=state.previousRoutes;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animationEnabled!==false:true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!==null&&_descriptor$options$a!==void 0?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(!previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})){if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}else if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref10){var key=_ref10.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);return StackView;}(React.Component);export{StackView as default};var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"sources":["StackView.tsx"],"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","View","isArrayEqual","a","b","length","every","it","index","StackView","Component","getDerivedStateFromProps","props","state","routes","previousRoutes","map","r","key","descriptors","previousDescriptors","reduce","acc","route","slice","openingRouteKeys","closingRouteKeys","replacingRouteKeys","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","descriptor","options","animationEnabled","getAnimationTypeForReplace","animationTypeForReplace","some","includes","filter","splice","Error","findIndex","render","navigation","routeNames","name","navigate","setState","dispatch","pop","source","target","closing","emit","type","data","_","rest","styles","container","insets","isParentModal","isParentHeaderShown","getPreviousRoute","handleOpenRoute","handleCloseRoute","handleTransitionStart","handleTransitionEnd","renderHeader","renderScene","handleGestureStart","handleGestureEnd","handleGestureCancel","create","flex"],"mappings":"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","sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  EdgeInsets,\n  SafeAreaInsetsContext,\n} from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets as EdgeInsets}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        renderScene={this.renderScene}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}