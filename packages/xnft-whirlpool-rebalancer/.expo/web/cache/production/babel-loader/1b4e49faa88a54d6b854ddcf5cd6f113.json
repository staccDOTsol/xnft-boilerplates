{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{nanoid}from'nanoid/non-secure';import*as React from'react';import useLatestCallback from'use-latest-callback';import useNavigation from\"./useNavigation\";import usePreventRemoveContext from\"./usePreventRemoveContext\";import useRoute from\"./useRoute\";export default function usePreventRemove(preventRemove,callback){var _React$useState=React.useState(function(){return nanoid();}),_React$useState2=_slicedToArray(_React$useState,1),id=_React$useState2[0];var navigation=useNavigation();var _useRoute=useRoute(),routeKey=_useRoute.key;var _usePreventRemoveCont=usePreventRemoveContext(),setPreventRemove=_usePreventRemoveCont.setPreventRemove;React.useEffect(function(){setPreventRemove(id,routeKey,preventRemove);return function(){setPreventRemove(id,routeKey,false);};},[setPreventRemove,id,routeKey,preventRemove]);var beforeRemoveListener=useLatestCallback(function(e){if(!preventRemove){return;}e.preventDefault();callback({data:e.data});});React.useEffect(function(){return navigation===null||navigation===void 0?void 0:navigation.addListener('beforeRemove',beforeRemoveListener);},[navigation,beforeRemoveListener]);}","map":{"version":3,"sources":["usePreventRemove.tsx"],"names":["nanoid","React","useLatestCallback","useNavigation","usePreventRemoveContext","useRoute","usePreventRemove","preventRemove","callback","id","useState","navigation","key","routeKey","setPreventRemove","useEffect","beforeRemoveListener","e","preventDefault","data","addListener"],"mappings":"iEACA,OAASA,MAAM,KAAQ,mBAAmB,CAC1C,MAAO,GAAKC,MAAK,KAAM,OAAO,CAC9B,MAAOC,kBAAiB,KAAM,qBAAqB,CAGnD,MAAOC,cAAa,uBACpB,MAAOC,wBAAuB,iCAC9B,MAAOC,SAAQ,kBAQf,cAAe,SAASC,iBAAgB,CACtCC,aAAsB,CACtBC,QAAmE,CACnE,CACA,oBAAaP,KAAK,CAACS,QAAQ,CAAC,iBAAMV,OAAM,EAAE,GAAC,oDAApCS,EAAE,qBAET,GAAME,WAAU,CAAGR,aAAa,EAAE,CAClC,cAA0BE,QAAQ,EAAE,CAAvBQ,QAAAA,WAALD,GAAG,CAEX,0BAA6BR,uBAAuB,EAAE,CAA9CU,gBAAAA,uBAAAA,gBAAAA,CAERb,KAAK,CAACc,SAAS,CAAC,UAAM,CACpBD,gBAAgB,CAACL,EAAE,CAAEI,QAAQ,CAAEN,aAAa,CAAC,CAC7C,MAAO,WAAM,CACXO,gBAAgB,CAACL,EAAE,CAAEI,QAAQ,CAAE,KAAK,CAAC,CACvC,CAAC,CACH,CAAC,CAAE,CAACC,gBAAgB,CAAEL,EAAE,CAAEI,QAAQ,CAAEN,aAAa,CAAC,CAAC,CAEnD,GAAMS,qBAAoB,CAAGd,iBAAiB,CAE3Ce,SAAAA,CAAC,CAAK,CACP,GAAI,CAACV,aAAa,CAAE,CAClB,OACF,CAEAU,CAAC,CAACC,cAAc,EAAE,CAElBV,QAAQ,CAAC,CAAEW,IAAI,CAAEF,CAAC,CAACE,IAAK,CAAC,CAAC,CAC5B,CAAC,CAAC,CAEFlB,KAAK,CAACc,SAAS,CACb,iBAAMJ,WAAU,GAAA,IAAA,EAAVA,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAVA,UAAU,CAAES,WAAW,CAAC,cAAc,CAAEJ,oBAAoB,CAAC,GACnE,CAACL,UAAU,CAAEK,oBAAoB,CAAC,CACnC,CACH","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(preventRemove, callback) {\n  const [id] = React.useState(() => nanoid());\n  const navigation = useNavigation();\n  const {\n    key: routeKey\n  } = useRoute();\n  const {\n    setPreventRemove\n  } = usePreventRemoveContext();\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n  const beforeRemoveListener = useLatestCallback(e => {\n    if (!preventRemove) {\n      return;\n    }\n    e.preventDefault();\n    callback({\n      data: e.data\n    });\n  });\n  React.useEffect(() => navigation === null || navigation === void 0 ? void 0 : navigation.addListener('beforeRemove', beforeRemoveListener), [navigation, beforeRemoveListener]);\n}\n//# sourceMappingURL=usePreventRemove.js.map"]},"metadata":{},"sourceType":"module"}