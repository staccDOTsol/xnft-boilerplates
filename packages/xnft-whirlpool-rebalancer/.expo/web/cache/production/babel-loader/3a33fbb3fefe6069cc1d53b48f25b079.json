{"ast":null,"code":"var isErrorHandlingEnabled=true;var developmentBuildMessage=\"If you're trying to use a module that is not supported in Expo Go, you need to create a development build of your app. See https://docs.expo.dev/development/introduction/ for more info.\";function customizeUnavailableMessage(error){error.message+='\\n\\n'+developmentBuildMessage;}function customizeModuleIsMissingMessage(error){error.message=\"Your JavaScript code tried to access a native module that doesn't exist. \\n\\n\"+developmentBuildMessage;}function customizeError(error){if('code'in error&&error.code==='ERR_UNAVAILABLE'){customizeUnavailableMessage(error);}else if(error.message.includes('Native module cannot be null')||error.message.includes('`new NativeEventEmitter()` requires a non-null argument.')){customizeModuleIsMissingMessage(error);}}function errorHandler(originalHandler,error,isFatal){if(error instanceof Error){customizeError(error);}originalHandler(error,isFatal);}export function createErrorHandler(originalHandler){return function(error,isFatal){if(isErrorHandlingEnabled){errorHandler(originalHandler,error,isFatal);return;}originalHandler(error,isFatal);};}export function disableErrorHandling(){isErrorHandlingEnabled=false;}","map":{"version":3,"sources":["../../src/errors/ExpoErrorManager.ts"],"names":[],"mappings":"AAGA,GAAI,uBAAsB,CAAG,IAAI,CAEjC,GAAM,wBAAuB,4LAA8L,CAE3N,QAAS,4BAA2B,CAAC,KAAiB,CAAA,CACpD,KAAK,CAAC,OAAO,EAAI,MAAM,CAAG,uBAAuB,CACnD,CAEA,QAAS,gCAA+B,CAAC,KAAY,CAAA,CACnD,KAAK,CAAC,OAAO,iFAEb,uBAAyB,CAC3B,CAEA,QAAS,eAAc,CAAC,KAAyB,CAAA,CAC/C,GAAI,MAAM,EAAI,MAAK,EAAI,KAAK,CAAC,IAAI,GAAK,iBAAiB,CAAE,CACvD,2BAA2B,CAAC,KAAK,CAAC,C,CACnC,IAAM,IACL,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EACtD,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,0DAA0D,CAAC,CAClF,CACA,+BAA+B,CAAC,KAAK,CAAC,CACvC,CACH,CAEA,QAAS,aAAY,CAAC,eAAe,CAAE,KAAK,CAAE,OAAO,CAAA,CACnD,GAAI,KAAK,WAAY,MAAK,CAAE,CAC1B,cAAc,CAAC,KAAK,CAAC,CACtB,CACD,eAAe,CAAC,KAAK,CAAE,OAAO,CAAC,CACjC,CAEA,MAAM,SAAU,mBAAkB,CAAC,eAAe,CAAA,CAChD,MAAO,UAAC,KAAK,CAAE,OAAO,CAAI,CACxB,GAAI,sBAAsB,CAAE,CAC1B,YAAY,CAAC,eAAe,CAAE,KAAK,CAAE,OAAO,CAAC,CAC7C,OACD,CAED,eAAe,CAAC,KAAK,CAAE,OAAO,CAAC,CACjC,CAAC,CACH,CAEA,MAAM,SAAU,qBAAoB,EAAA,CAClC,sBAAsB,CAAG,KAAK,CAChC","sourcesContent":["// Similar interface to the one used in expo modules.\ntype CodedError = Error & { code?: string };\n\nlet isErrorHandlingEnabled = true;\n\nconst developmentBuildMessage = `If you're trying to use a module that is not supported in Expo Go, you need to create a development build of your app. See https://docs.expo.dev/development/introduction/ for more info.`;\n\nfunction customizeUnavailableMessage(error: CodedError) {\n  error.message += '\\n\\n' + developmentBuildMessage;\n}\n\nfunction customizeModuleIsMissingMessage(error: Error) {\n  error.message = `Your JavaScript code tried to access a native module that doesn't exist. \n\n${developmentBuildMessage}`;\n}\n\nfunction customizeError(error: Error | CodedError) {\n  if ('code' in error && error.code === 'ERR_UNAVAILABLE') {\n    customizeUnavailableMessage(error);\n  } else if (\n    error.message.includes('Native module cannot be null') || // RN 0.64 and below message\n    error.message.includes('`new NativeEventEmitter()` requires a non-null argument.') // RN 0.65+ message\n  ) {\n    customizeModuleIsMissingMessage(error);\n  }\n}\n\nfunction errorHandler(originalHandler, error, isFatal) {\n  if (error instanceof Error) {\n    customizeError(error);\n  }\n  originalHandler(error, isFatal);\n}\n\nexport function createErrorHandler(originalHandler) {\n  return (error, isFatal) => {\n    if (isErrorHandlingEnabled) {\n      errorHandler(originalHandler, error, isFatal);\n      return;\n    }\n\n    originalHandler(error, isFatal);\n  };\n}\n\nexport function disableErrorHandling() {\n  isErrorHandlingEnabled = false;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}