{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"key\",\"routeNames\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import checkDuplicateRouteNames from\"./checkDuplicateRouteNames\";import checkSerializable from\"./checkSerializable\";import{NOT_INITIALIZED_ERROR}from\"./createNavigationContainerRef\";import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import findFocusedRoute from\"./findFocusedRoute\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationContainerRefContext from\"./NavigationContainerRefContext\";import NavigationContext from\"./NavigationContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import UnhandledActionContext from\"./UnhandledActionContext\";import useChildListeners from\"./useChildListeners\";import useEventEmitter from\"./useEventEmitter\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useOptionsGetters from\"./useOptionsGetters\";import{ScheduleUpdateContext}from\"./useScheduleUpdate\";import useSyncState from\"./useSyncState\";var serializableWarnings=[];var duplicateNameWarnings=[];var getPartialState=function getPartialState(state){if(state===undefined){return;}var key=state.key,routeNames=state.routeNames,partialState=_objectWithoutProperties(state,_excluded);return _objectSpread(_objectSpread({},partialState),{},{stale:true,routes:state.routes.map(function(route){if(route.state===undefined){return route;}return _objectSpread(_objectSpread({},route),{},{state:getPartialState(route.state)});})});};var BaseNavigationContainer=React.forwardRef(function BaseNavigationContainer(_ref,ref){var initialState=_ref.initialState,onStateChange=_ref.onStateChange,onUnhandledAction=_ref.onUnhandledAction,independent=_ref.independent,children=_ref.children;var parent=React.useContext(NavigationStateContext);if(!parent.isDefault&&!independent){throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");}var _useSyncState=useSyncState(function(){return getPartialState(initialState==null?undefined:initialState);}),_useSyncState2=_slicedToArray(_useSyncState,5),state=_useSyncState2[0],getState=_useSyncState2[1],setState=_useSyncState2[2],scheduleUpdate=_useSyncState2[3],flushUpdates=_useSyncState2[4];var isFirstMountRef=React.useRef(true);var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var _useChildListeners=useChildListeners(),listeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var dispatch=React.useCallback(function(action){if(listeners.focus[0]==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(action);});}},[listeners.focus]);var canGoBack=React.useCallback(function(){if(listeners.focus[0]==null){return false;}var _listeners$focus$=listeners.focus[0](function(navigation){return navigation.canGoBack();}),result=_listeners$focus$.result,handled=_listeners$focus$.handled;if(handled){return result;}else{return false;}},[listeners.focus]);var resetRoot=React.useCallback(function(state){var _ref2;var _keyedListeners$getSt,_keyedListeners$getSt2;var target=(_ref2=state===null||state===void 0?void 0:state.key)!=null?_ref2:(_keyedListeners$getSt=(_keyedListeners$getSt2=keyedListeners.getState).root)===null||_keyedListeners$getSt===void 0?void 0:_keyedListeners$getSt.call(_keyedListeners$getSt2).key;if(target==null){console.error(NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.reset(state)),{},{target:target}));});}},[keyedListeners.getState,listeners.focus]);var getRootState=React.useCallback(function(){var _keyedListeners$getSt3,_keyedListeners$getSt4;return(_keyedListeners$getSt3=(_keyedListeners$getSt4=keyedListeners.getState).root)===null||_keyedListeners$getSt3===void 0?void 0:_keyedListeners$getSt3.call(_keyedListeners$getSt4);},[keyedListeners.getState]);var getCurrentRoute=React.useCallback(function(){var state=getRootState();if(state==null){return undefined;}var route=findFocusedRoute(state);return route;},[getRootState]);var emitter=useEventEmitter();var _useOptionsGetters=useOptionsGetters({}),addOptionsGetter=_useOptionsGetters.addOptionsGetter,getCurrentOptions=_useOptionsGetters.getCurrentOptions;var navigation=React.useMemo(function(){return _objectSpread(_objectSpread(_objectSpread({},Object.keys(CommonActions).reduce(function(acc,name){acc[name]=function(){return dispatch(CommonActions[name].apply(CommonActions,arguments));};return acc;},{})),emitter.create('root')),{},{dispatch:dispatch,resetRoot:resetRoot,isFocused:function isFocused(){return true;},canGoBack:canGoBack,getParent:function getParent(){return undefined;},getState:function getState(){return stateRef.current;},getRootState:getRootState,getCurrentRoute:getCurrentRoute,getCurrentOptions:getCurrentOptions,isReady:function isReady(){return listeners.focus[0]!=null;}});},[canGoBack,dispatch,emitter,getCurrentOptions,getCurrentRoute,getRootState,listeners.focus,resetRoot]);React.useImperativeHandle(ref,function(){return navigation;},[navigation]);var onDispatchAction=React.useCallback(function(action,noop){emitter.emit({type:'__unsafe_action__',data:{action:action,noop:noop,stack:stackRef.current}});},[emitter]);var lastEmittedOptionsRef=React.useRef();var onOptionsChange=React.useCallback(function(options){if(lastEmittedOptionsRef.current===options){return;}lastEmittedOptionsRef.current=options;emitter.emit({type:'options',data:{options:options}});},[emitter]);var stackRef=React.useRef();var builderContext=React.useMemo(function(){return{addListener:addListener,addKeyedListener:addKeyedListener,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,stackRef:stackRef};},[addListener,addKeyedListener,onDispatchAction,onOptionsChange]);var scheduleContext=React.useMemo(function(){return{scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates};},[scheduleUpdate,flushUpdates]);var isInitialRef=React.useRef(true);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:state,getState:getState,setState:setState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[state,getState,setState,getKey,setKey,getIsInitial,addOptionsGetter]);var onStateChangeRef=React.useRef(onStateChange);var stateRef=React.useRef(state);React.useEffect(function(){isInitialRef.current=false;onStateChangeRef.current=onStateChange;stateRef.current=state;});React.useEffect(function(){var hydratedState=getRootState();if(process.env.NODE_ENV!=='production'){if(hydratedState!==undefined){var serializableResult=checkSerializable(hydratedState);if(!serializableResult.serializable){var location=serializableResult.location,reason=serializableResult.reason;var path='';var pointer=hydratedState;var params=false;for(var i=0;i<location.length;i++){var curr=location[i];var prev=location[i-1];pointer=pointer[curr];if(!params&&curr==='state'){continue;}else if(!params&&curr==='routes'){if(path){path+=' > ';}}else if(!params&&typeof curr==='number'&&prev==='routes'){var _pointer;path+=(_pointer=pointer)===null||_pointer===void 0?void 0:_pointer.name;}else if(!params){path+=\" > \"+curr;params=true;}else{if(typeof curr==='number'||/^[0-9]+$/.test(curr)){path+=\"[\"+curr+\"]\";}else if(/^[a-z$_]+$/i.test(curr)){path+=\".\"+curr;}else{path+=\"[\"+JSON.stringify(curr)+\"]\";}}}var message=\"Non-serializable values were found in the navigation state. Check:\\n\\n\"+path+\" (\"+reason+\")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\";if(!serializableWarnings.includes(message)){serializableWarnings.push(message);console.warn(message);}}var duplicateRouteNamesResult=checkDuplicateRouteNames(hydratedState);if(duplicateRouteNamesResult.length){var _message=\"Found screens with the same name nested inside one another. Check:\\n\"+duplicateRouteNamesResult.map(function(locations){return\"\\n\"+locations.join(', ');})+\"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\";if(!duplicateNameWarnings.includes(_message)){duplicateNameWarnings.push(_message);console.warn(_message);}}}}emitter.emit({type:'state',data:{state:state}});if(!isFirstMountRef.current&&onStateChangeRef.current){onStateChangeRef.current(hydratedState);}isFirstMountRef.current=false;},[getRootState,emitter,state]);var defaultOnUnhandledAction=React.useCallback(function(action){if(process.env.NODE_ENV==='production'){return;}var payload=action.payload;var message=\"The action '\"+action.type+\"'\"+(payload?\" with payload \"+JSON.stringify(action.payload):'')+\" was not handled by any navigator.\";switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload!==null&&payload!==void 0&&payload.name){message+=\"\\n\\nDo you have a screen named '\"+payload.name+\"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\";}else{message+=\"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=\"\\n\\nIs there any screen to go back to?\";break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=\"\\n\\nIs your screen inside a Drawer navigator?\";break;}message+=\"\\n\\nThis is a development-only warning and won't be shown in production.\";console.error(message);},[]);var element=React.createElement(NavigationContainerRefContext.Provider,{value:navigation},React.createElement(ScheduleUpdateContext.Provider,{value:scheduleContext},React.createElement(NavigationBuilderContext.Provider,{value:builderContext},React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(UnhandledActionContext.Provider,{value:onUnhandledAction!=null?onUnhandledAction:defaultOnUnhandledAction},React.createElement(EnsureSingleNavigator,null,children))))));if(independent){element=React.createElement(NavigationRouteContext.Provider,{value:undefined},React.createElement(NavigationContext.Provider,{value:undefined},element));}return element;});export default BaseNavigationContainer;","map":{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["CommonActions","React","checkDuplicateRouteNames","checkSerializable","NOT_INITIALIZED_ERROR","EnsureSingleNavigator","findFocusedRoute","NavigationBuilderContext","NavigationContainerRefContext","NavigationContext","NavigationRouteContext","NavigationStateContext","UnhandledActionContext","useChildListeners","useEventEmitter","useKeyedChildListeners","useOptionsGetters","ScheduleUpdateContext","useSyncState","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","initialState","onStateChange","onUnhandledAction","independent","children","ref","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","navigation","canGoBack","result","handled","resetRoot","target","root","reset","getRootState","getCurrentRoute","emitter","addOptionsGetter","getCurrentOptions","useMemo","Object","keys","reduce","acc","name","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","serializable","location","reason","path","pointer","params","i","length","curr","prev","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","locations","join","defaultOnUnhandledAction","payload","element"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\nconst serializableWarnings = [];\nconst duplicateNameWarnings = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = state => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {\n    key,\n    routeNames,\n    ...partialState\n  } = state;\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map(route => {\n      if (route.state === undefined) {\n        return route;\n      }\n      return {\n        ...route,\n        state: getPartialState(route.state)\n      };\n    })\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = /*#__PURE__*/React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  let {\n    initialState,\n    onStateChange,\n    onUnhandledAction,\n    independent,\n    children\n  } = _ref;\n  const parent = React.useContext(NavigationStateContext);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  const [state, getState, setState, scheduleUpdate, flushUpdates] = useSyncState(() => getPartialState(initialState == null ? undefined : initialState));\n  const isFirstMountRef = React.useRef(true);\n  const navigatorKeyRef = React.useRef();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n  const setKey = React.useCallback(key => {\n    navigatorKeyRef.current = key;\n  }, []);\n  const {\n    listeners,\n    addListener\n  } = useChildListeners();\n  const {\n    keyedListeners,\n    addKeyedListener\n  } = useKeyedChildListeners();\n  const dispatch = React.useCallback(action => {\n    if (listeners.focus[0] == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](navigation => navigation.dispatch(action));\n    }\n  }, [listeners.focus]);\n  const canGoBack = React.useCallback(() => {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n    const {\n      result,\n      handled\n    } = listeners.focus[0](navigation => navigation.canGoBack());\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  }, [listeners.focus]);\n  const resetRoot = React.useCallback(state => {\n    var _keyedListeners$getSt, _keyedListeners$getSt2;\n    const target = (state === null || state === void 0 ? void 0 : state.key) ?? ((_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key);\n    if (target == null) {\n      console.error(NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](navigation => navigation.dispatch({\n        ...CommonActions.reset(state),\n        target\n      }));\n    }\n  }, [keyedListeners.getState, listeners.focus]);\n  const getRootState = React.useCallback(() => {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  const getCurrentRoute = React.useCallback(() => {\n    const state = getRootState();\n    if (state == null) {\n      return undefined;\n    }\n    const route = findFocusedRoute(state);\n    return route;\n  }, [getRootState]);\n  const emitter = useEventEmitter();\n  const {\n    addOptionsGetter,\n    getCurrentOptions\n  } = useOptionsGetters({});\n  const navigation = React.useMemo(() => ({\n    ...Object.keys(CommonActions).reduce((acc, name) => {\n      acc[name] = function () {\n        return (\n          // @ts-expect-error: this is ok\n          dispatch(CommonActions[name](...arguments))\n        );\n      };\n      return acc;\n    }, {}),\n    ...emitter.create('root'),\n    dispatch,\n    resetRoot,\n    isFocused: () => true,\n    canGoBack,\n    getParent: () => undefined,\n    getState: () => stateRef.current,\n    getRootState,\n    getCurrentRoute,\n    getCurrentOptions,\n    isReady: () => listeners.focus[0] != null\n  }), [canGoBack, dispatch, emitter, getCurrentOptions, getCurrentRoute, getRootState, listeners.focus, resetRoot]);\n  React.useImperativeHandle(ref, () => navigation, [navigation]);\n  const onDispatchAction = React.useCallback((action, noop) => {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action,\n        noop,\n        stack: stackRef.current\n      }\n    });\n  }, [emitter]);\n  const lastEmittedOptionsRef = React.useRef();\n  const onOptionsChange = React.useCallback(options => {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options\n      }\n    });\n  }, [emitter]);\n  const stackRef = React.useRef();\n  const builderContext = React.useMemo(() => ({\n    addListener,\n    addKeyedListener,\n    onDispatchAction,\n    onOptionsChange,\n    stackRef\n  }), [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  const scheduleContext = React.useMemo(() => ({\n    scheduleUpdate,\n    flushUpdates\n  }), [scheduleUpdate, flushUpdates]);\n  const isInitialRef = React.useRef(true);\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n  const context = React.useMemo(() => ({\n    state,\n    getState,\n    setState,\n    getKey,\n    setKey,\n    getIsInitial,\n    addOptionsGetter\n  }), [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  const onStateChangeRef = React.useRef(onStateChange);\n  const stateRef = React.useRef(state);\n  React.useEffect(() => {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n    stateRef.current = state;\n  });\n  React.useEffect(() => {\n    const hydratedState = getRootState();\n    if (process.env.NODE_ENV !== 'production') {\n      if (hydratedState !== undefined) {\n        const serializableResult = checkSerializable(hydratedState);\n        if (!serializableResult.serializable) {\n          const {\n            location,\n            reason\n          } = serializableResult;\n          let path = '';\n          let pointer = hydratedState;\n          let params = false;\n          for (let i = 0; i < location.length; i++) {\n            const curr = location[i];\n            const prev = location[i - 1];\n            pointer = pointer[curr];\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += ` > ${curr}`;\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += `[${curr}]`;\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += `.${curr}`;\n              } else {\n                path += `[${JSON.stringify(curr)}]`;\n              }\n            }\n          }\n          const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n        const duplicateRouteNamesResult = checkDuplicateRouteNames(hydratedState);\n        if (duplicateRouteNamesResult.length) {\n          const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(locations => `\\n${locations.join(', ')}`)}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n          if (!duplicateNameWarnings.includes(message)) {\n            duplicateNameWarnings.push(message);\n            console.warn(message);\n          }\n        }\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(hydratedState);\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  const defaultOnUnhandledAction = React.useCallback(action => {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    const payload = action.payload;\n    let message = `The action '${action.type}'${payload ? ` with payload ${JSON.stringify(action.payload)}` : ''} was not handled by any navigator.`;\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n        } else {\n          message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += `\\n\\nIs there any screen to go back to?`;\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += `\\n\\nIs your screen inside a Drawer navigator?`;\n        break;\n    }\n    message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n    console.error(message);\n  }, []);\n  let element = /*#__PURE__*/React.createElement(NavigationContainerRefContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, /*#__PURE__*/React.createElement(NavigationBuilderContext.Provider, {\n    value: builderContext\n  }, /*#__PURE__*/React.createElement(NavigationStateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(UnhandledActionContext.Provider, {\n    value: onUnhandledAction ?? defaultOnUnhandledAction\n  }, /*#__PURE__*/React.createElement(EnsureSingleNavigator, null, children))))));\n  if (independent) {\n    // We need to clear any existing contexts for nested independent container to work correctly\n    element = /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n      value: undefined\n    }, /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      value: undefined\n    }, element));\n  }\n  return element;\n});\nexport default BaseNavigationContainer;\n//# sourceMappingURL=BaseNavigationContainer.js.map"]},"metadata":{},"sourceType":"module"}