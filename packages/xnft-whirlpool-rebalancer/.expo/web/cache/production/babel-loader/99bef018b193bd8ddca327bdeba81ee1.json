{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";var _excluded=[\"children\",\"screenListeners\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{CommonActions}from'@react-navigation/routers';import*as React from'react';import{isValidElementType}from'react-is';import Group from\"./Group\";import isArrayEqual from\"./isArrayEqual\";import isRecordEqual from\"./isRecordEqual\";import NavigationHelpersContext from\"./NavigationHelpersContext\";import NavigationRouteContext from\"./NavigationRouteContext\";import NavigationStateContext from\"./NavigationStateContext\";import PreventRemoveProvider from\"./PreventRemoveProvider\";import Screen from\"./Screen\";import{PrivateValueStore}from\"./types\";import useChildListeners from\"./useChildListeners\";import useComponent from\"./useComponent\";import useCurrentRender from\"./useCurrentRender\";import useDescriptors from\"./useDescriptors\";import useEventEmitter from\"./useEventEmitter\";import useFocusedListenersChildrenAdapter from\"./useFocusedListenersChildrenAdapter\";import useFocusEvents from\"./useFocusEvents\";import useKeyedChildListeners from\"./useKeyedChildListeners\";import useNavigationHelpers from\"./useNavigationHelpers\";import useOnAction from\"./useOnAction\";import useOnGetState from\"./useOnGetState\";import useOnRouteFocus from\"./useOnRouteFocus\";import useRegisterNavigator from\"./useRegisterNavigator\";import useScheduleUpdate from\"./useScheduleUpdate\";PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the screen '\"+child.props.name+\"'. It must be a non-empty string or 'undefined'.\");}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,props:child.props});return acc;}if(child.type===React.Fragment||child.type===Group){if(!isValidKey(child.props.navigationKey)){throw new Error(\"Got an invalid 'navigationKey' prop (\"+JSON.stringify(child.props.navigationKey)+\") for the group. It must be a non-empty string or 'undefined'.\");}acc.push.apply(acc,_toConsumableArray(getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions])));return acc;}}throw new Error(\"A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found \"+(React.isValidElement(child)?\"'\"+(typeof child.type==='string'?child.type:(_child$type=child.type)===null||_child$type===void 0?void 0:_child$type.name)+\"'\"+((_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.name?\" for the screen '\"+child.props.name+\"'\":''):typeof child==='object'?JSON.stringify(child):\"'\"+String(child)+\"'\")+\"). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.\");},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(\"Got an invalid name (\"+JSON.stringify(name)+\") for the screen. It must be a non-empty string.\");}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(\"Got both 'component' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&getComponent!==undefined){throw new Error(\"Got both 'getComponent' and 'children' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(component!==undefined&&getComponent!==undefined){throw new Error(\"Got both 'component' and 'getComponent' props for the screen '\"+name+\"'. You must pass only one of them.\");}if(children!=null&&typeof children!=='function'){throw new Error(\"Got an invalid value for 'children' prop for the screen '\"+name+\"'. It must be a function returning a React Element.\");}if(component!==undefined&&!isValidElementType(component)){throw new Error(\"Got an invalid value for 'component' prop for the screen '\"+name+\"'. It must be a valid React Component.\");}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(\"Got an invalid value for 'getComponent' prop for the screen '\"+name+\"'. It must be a function returning a React Component.\");}if(typeof component==='function'){if(component.name==='component'){console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\"+name+\"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");}else if(/^[a-z]/.test(component.name)){console.warn(\"Got a component with the name '\"+component.name+\"' for the screen '\"+name+\"'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.\");}}}else{throw new Error(\"Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '\"+name+\"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");}});}return configs;};export default function useNavigationBuilder(createRouter,options){var navigatorKey=useRegisterNavigator();var route=React.useContext(NavigationRouteContext);var children=options.children,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var _React$useRef=React.useRef(createRouter(_objectSpread(_objectSpread({},rest),route!==null&&route!==void 0&&route.params&&route.params.state==null&&route.params.initial!==false&&typeof route.params.screen==='string'?{initialRouteName:route.params.screen}:null))),router=_React$useRef.current;var routeConfigs=getRouteConfigsFromChildren(children);var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\"+config.props.name+\"')\");}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var cleanUpState=React.useCallback(function(){setCurrentState(undefined);stateCleanedUp.current=true;},[setCurrentState]);var setState=React.useCallback(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);},[setCurrentState]);var _React$useMemo=React.useMemo(function(){var _route$params4;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route===null||route===void 0?void 0:(_route$params=route.params)===null||_route$params===void 0?void 0:_route$params.state)==null&&(route===null||route===void 0?void 0:(_route$params2=route.params)===null||_route$params2===void 0?void 0:_route$params2.initial)!==false&&(route===null||route===void 0?void 0:(_route$params3=route.params)===null||_route$params3===void 0?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?_objectSpread(_objectSpread({},initialParams),initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route===null||route===void 0?void 0:(_route$params4=route.params)===null||_route$params4===void 0?void 0:_route$params4.state)==null){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _ref;var _route$params5;return[router.getRehydratedState((_ref=route===null||route===void 0?void 0:(_route$params5=route.params)===null||_route$params5===void 0?void 0:_route$params5.state)!=null?_ref:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!isArrayEqual(state.routeNames,routeNames)||!isRecordEqual(routeKeyList,previousRouteKeyList)){nextState=router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return previousRouteKeyList.hasOwnProperty(name)&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route===null||route===void 0?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route===null||route===void 0?void 0:route.params;},[route===null||route===void 0?void 0:route.params]);if(route!==null&&route!==void 0&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;useScheduleUpdate(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){setTimeout(function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){cleanUpState();}},0);};},[]);var initializedStateRef=React.useRef();initializedStateRef.current=initializedState;var getState=React.useCallback(function(){var currentState=getCurrentState();return isStateInitialized(currentState)?currentState:initializedStateRef.current;},[getCurrentState,isStateInitialized]);var emitter=useEventEmitter(function(e){var _ref2;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!==null&&_route!==void 0&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)===null||_route2===void 0?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref2=[]).concat.apply(_ref2,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map===null||map===void 0?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener===null||listener===void 0?void 0:listener(e);});});useFocusEvents({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _useChildListeners=useChildListeners(),childListeners=_useChildListeners.listeners,addListener=_useChildListeners.addListener;var _useKeyedChildListene=useKeyedChildListeners(),keyedListeners=_useKeyedChildListene.keyedListeners,addKeyedListener=_useKeyedChildListene.addKeyedListener;var onAction=useOnAction({router:router,getState:getState,setState:setState,key:route===null||route===void 0?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=useOnRouteFocus({router:router,key:route===null||route===void 0?void 0:route.key,getState:getState,setState:setState});var navigation=useNavigationHelpers({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router});useFocusedListenersChildrenAdapter({navigation:navigation,focusedListeners:childListeners.focus});useOnGetState({getState:getState,getStateListeners:keyedListeners.getState});var descriptors=useDescriptors({state:state,screens:screens,navigation:navigation,screenOptions:options.screenOptions,defaultScreenOptions:options.defaultScreenOptions,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter});useCurrentRender({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=useComponent(function(children){return React.createElement(NavigationHelpersContext.Provider,{value:navigation},React.createElement(PreventRemoveProvider,null,children));});return{state:state,navigation:navigation,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"sources":["useNavigationBuilder.tsx"],"names":["CommonActions","React","isValidElementType","Group","isArrayEqual","isRecordEqual","NavigationHelpersContext","NavigationRouteContext","NavigationStateContext","PreventRemoveProvider","Screen","PrivateValueStore","useChildListeners","useComponent","useCurrentRender","useDescriptors","useEventEmitter","useFocusedListenersChildrenAdapter","useFocusEvents","useKeyedChildListeners","useNavigationHelpers","useOnAction","useOnGetState","useOnRouteFocus","useRegisterNavigator","useScheduleUpdate","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","configs","Children","toArray","reduce","acc","child","isValidElement","type","props","navigationKey","Error","JSON","stringify","name","push","keys","options","Fragment","screenOptions","String","process","env","NODE_ENV","forEach","config","component","getComponent","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","route","useContext","screenListeners","rest","current","router","useRef","params","state","initial","screen","initialRouteName","routeConfigs","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","Object","assign","getId","length","isStateValid","useCallback","isStateInitialized","stale","currentState","getState","getCurrentState","setState","setCurrentState","setKey","getKey","getIsInitial","stateCleanedUp","cleanUpState","initializedState","isFirstStateInitialization","useMemo","initialRouteParamList","initialParamsFromParams","getInitialState","getRehydratedState","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","getStateForRouteNamesChange","routeKeyChanges","filter","hasOwnProperty","previousNestedParamsRef","previousParams","action","reset","navigate","path","updatedState","getStateForAction","shouldUpdate","setTimeout","initializedStateRef","emitter","e","target","routes","find","index","navigation","descriptors","listeners","concat","cb","i","self","lastIndexOf","listener","emit","data","childListeners","addListener","keyedListeners","addKeyedListener","onAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","id","focusedListeners","focus","getStateListeners","defaultScreenOptions","NavigationContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport Group from './Group';\nimport isArrayEqual from './isArrayEqual';\nimport isRecordEqual from './isRecordEqual';\nimport NavigationHelpersContext from './NavigationHelpersContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport PreventRemoveProvider from './PreventRemoveProvider';\nimport Screen from './Screen';\nimport { PrivateValueStore } from './types';\nimport useChildListeners from './useChildListeners';\nimport useComponent from './useComponent';\nimport useCurrentRender from './useCurrentRender';\nimport useDescriptors from './useDescriptors';\nimport useEventEmitter from './useEventEmitter';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport useFocusEvents from './useFocusEvents';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useOnGetState from './useOnGetState';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useScheduleUpdate from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\nconst isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = (children, groupKey, groupOptions) => {\n  const configs = React.Children.toArray(children).reduce((acc, child) => {\n    var _child$type, _child$props;\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n        }\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          props: child.props\n        });\n        return acc;\n      }\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions]));\n        return acc;\n      }\n    }\n    throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.name}'${(_child$props = child.props) !== null && _child$props !== void 0 && _child$props.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n  }, []);\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach(config => {\n      const {\n        name,\n        children,\n        component,\n        getComponent\n      } = config.props;\n      if (typeof name !== 'string' || !name) {\n        throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n      }\n      if (children != null || component !== undefined || getComponent !== undefined) {\n        if (children != null && component !== undefined) {\n          throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (children != null && getComponent !== undefined) {\n          throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n        }\n        if (children != null && typeof children !== 'function') {\n          throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n        }\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n        }\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n        }\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n          }\n        }\n      } else {\n        throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n    });\n  }\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder(createRouter, options) {\n  const navigatorKey = useRegisterNavigator();\n  const route = React.useContext(NavigationRouteContext);\n  const {\n    children,\n    screenListeners,\n    ...rest\n  } = options;\n  const {\n    current: router\n  } = React.useRef(createRouter({\n    ...rest,\n    ...(route !== null && route !== void 0 && route.params && route.params.state == null && route.params.initial !== false && typeof route.params.screen === 'string' ? {\n      initialRouteName: route.params.screen\n    } : null)\n  }));\n  const routeConfigs = getRouteConfigsFromChildren(children);\n  const screens = routeConfigs.reduce((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n    }\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n  const routeNames = routeConfigs.map(config => config.props.name);\n  const routeKeyList = routeNames.reduce((acc, curr) => {\n    acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n    return acc;\n  }, {});\n  const routeParamList = routeNames.reduce((acc, curr) => {\n    const {\n      initialParams\n    } = screens[curr].props;\n    acc[curr] = initialParams;\n    return acc;\n  }, {});\n  const routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n    [curr]: screens[curr].props.getId\n  }), {});\n  if (!routeNames.length) {\n    throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n  }\n  const isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n  const isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial\n  } = React.useContext(NavigationStateContext);\n  const stateCleanedUp = React.useRef(false);\n  const cleanUpState = React.useCallback(() => {\n    setCurrentState(undefined);\n    stateCleanedUp.current = true;\n  }, [setCurrentState]);\n  const setState = React.useCallback(state => {\n    if (stateCleanedUp.current) {\n      // State might have been already cleaned up due to unmount\n      // We do not want to expose API allowing to override this\n      // This would lead to old data preservation on main navigator unmount\n      return;\n    }\n    setCurrentState(state);\n  }, [setCurrentState]);\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    var _route$params4;\n    const initialRouteParamList = routeNames.reduce((acc, curr) => {\n      var _route$params, _route$params2, _route$params3;\n      const {\n        initialParams\n      } = screens[curr].props;\n      const initialParamsFromParams = (route === null || route === void 0 ? void 0 : (_route$params = route.params) === null || _route$params === void 0 ? void 0 : _route$params.state) == null && (route === null || route === void 0 ? void 0 : (_route$params2 = route.params) === null || _route$params2 === void 0 ? void 0 : _route$params2.initial) !== false && (route === null || route === void 0 ? void 0 : (_route$params3 = route.params) === null || _route$params3 === void 0 ? void 0 : _route$params3.screen) === curr ? route.params.params : undefined;\n      acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n        ...initialParams,\n        ...initialParamsFromParams\n      } : undefined;\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if ((currentState === undefined || !isStateValid(currentState)) && (route === null || route === void 0 ? void 0 : (_route$params4 = route.params) === null || _route$params4 === void 0 ? void 0 : _route$params4.state) == null) {\n      return [router.getInitialState({\n        routeNames,\n        routeParamList: initialRouteParamList,\n        routeGetIdList\n      }), true];\n    } else {\n      var _route$params5;\n      return [router.getRehydratedState((route === null || route === void 0 ? void 0 : (_route$params5 = route.params) === null || _route$params5 === void 0 ? void 0 : _route$params5.state) ?? currentState, {\n        routeNames,\n        routeParamList: initialRouteParamList,\n        routeGetIdList\n      }), false];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n  let state =\n  // If the state isn't initialized, or stale, use the state we initialized instead\n  // The state won't update until there's a change needed in the state we have initalized locally\n  // So it'll be `undefined` or stale until the first navigation event happens\n  isStateInitialized(currentState) ? currentState : initializedState;\n  let nextState = state;\n  if (!isArrayEqual(state.routeNames, routeNames) || !isRecordEqual(routeKeyList, previousRouteKeyList)) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n      routeKeyChanges: Object.keys(routeKeyList).filter(name => previousRouteKeyList.hasOwnProperty(name) && routeKeyList[name] !== previousRouteKeyList[name])\n    });\n  }\n  const previousNestedParamsRef = React.useRef(route === null || route === void 0 ? void 0 : route.params);\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route === null || route === void 0 ? void 0 : route.params;\n  }, [route === null || route === void 0 ? void 0 : route.params]);\n  if (route !== null && route !== void 0 && route.params) {\n    const previousParams = previousNestedParamsRef.current;\n    let action;\n    if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action ? router.getStateForAction(nextState, action, {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    }) : null;\n    nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    }) : nextState;\n  }\n  const shouldUpdate = state !== nextState;\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n  React.useEffect(() => {\n    setKey(navigatorKey);\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      // We do it in a timeout because we need to detect if another navigator mounted in the meantime\n      // For example, if another navigator has started rendering, we should skip cleanup\n      // Otherwise, our cleanup step will cleanup state for the other navigator and re-initialize it\n      setTimeout(() => {\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          cleanUpState();\n        }\n      }, 0);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // We initialize this ref here to avoid a new getState getting initialized\n  // whenever initializedState changes. We want getState to have access to the\n  // latest initializedState, but don't need it to change when that happens\n  const initializedStateRef = React.useRef();\n  initializedStateRef.current = initializedState;\n  const getState = React.useCallback(() => {\n    const currentState = getCurrentState();\n    return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n  }, [getCurrentState, isStateInitialized]);\n  const emitter = useEventEmitter(e => {\n    let routeNames = [];\n    let route;\n    if (e.target) {\n      var _route;\n      route = state.routes.find(route => route.key === e.target);\n      if ((_route = route) !== null && _route !== void 0 && _route.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(...Object.keys(screens).filter(name => {\n        var _route2;\n        return ((_route2 = route) === null || _route2 === void 0 ? void 0 : _route2.name) === name;\n      }));\n    }\n    if (route == null) {\n      return;\n    }\n    const navigation = descriptors[route.key].navigation;\n    const listeners = [].concat(\n    // Get an array of listeners for all screens + common listeners on navigator\n    ...[screenListeners, ...routeNames.map(name => {\n      const {\n        listeners\n      } = screens[name].props;\n      return listeners;\n    })].map(listeners => {\n      const map = typeof listeners === 'function' ? listeners({\n        route: route,\n        navigation\n      }) : listeners;\n      return map ? Object.keys(map).filter(type => type === e.type).map(type => map === null || map === void 0 ? void 0 : map[type]) : undefined;\n    }))\n    // We don't want same listener to be called multiple times for same event\n    // So we remove any duplicate functions from the array\n    .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n    listeners.forEach(listener => listener === null || listener === void 0 ? void 0 : listener(e));\n  });\n  useFocusEvents({\n    state,\n    emitter\n  });\n  React.useEffect(() => {\n    emitter.emit({\n      type: 'state',\n      data: {\n        state\n      }\n    });\n  }, [emitter, state]);\n  const {\n    listeners: childListeners,\n    addListener\n  } = useChildListeners();\n  const {\n    keyedListeners,\n    addKeyedListener\n  } = useKeyedChildListeners();\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route === null || route === void 0 ? void 0 : route.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList\n    },\n    emitter\n  });\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route === null || route === void 0 ? void 0 : route.key,\n    getState,\n    setState\n  });\n  const navigation = useNavigationHelpers({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router\n  });\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus\n  });\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState\n  });\n  const descriptors = useDescriptors({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    defaultScreenOptions: options.defaultScreenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter\n  });\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors\n  });\n  const NavigationContent = useComponent(children => /*#__PURE__*/React.createElement(NavigationHelpersContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(PreventRemoveProvider, null, children)));\n  return {\n    state,\n    navigation,\n    descriptors,\n    NavigationContent\n  };\n}\n//# sourceMappingURL=useNavigationBuilder.js.map"]},"metadata":{},"sourceType":"module"}